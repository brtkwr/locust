name: Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: Windows, python: '3.12', os: windows-latest, tox: fail_fast_test_main }

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Set up Python and virtual environment
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Make venv
        run: |
          python -m venv .venv
      - name: Activate the virtualenv
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          .venv\Scripts\activate
      - name: Activate the virtualenv
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          source .venv/bin/activate
      # Set up poetry and cache for dependencies
      - name: install poetry
        run: |
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('pyproject.toml') }}
      - name: Install versioning plugin
        run: |
          python -m pip install poetry-dynamic-versioning[plugin]
      # Install test dependencies (tox) to the root (non-package install)
      - name: Install test dependencies
        run: |
          poetry install --no-root --only test
      - name: set full Python version in PY env var
        if: ${{ matrix.os != 'windows-latest' }}
        # See https://pre-commit.com/#github-actions-example
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      # Install node and yarn in order to build the front end during packaging  
      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install Yarn
        run: npm install -g yarn
      - name: Run tox tests
        run: poetry run tox -e ${{ matrix.tox }}

  lint_typecheck_test_webui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: borales/actions-yarn@v3
        with:
          cmd: webui:install
      - uses: borales/actions-yarn@v3
        with:
          cmd: webui:build
      - uses: borales/actions-yarn@v3
        with:
          cmd: webui:test
      - uses: borales/actions-yarn@v3
        with:
          cmd: webui:lint
      - uses: borales/actions-yarn@v3
        with:
          cmd: webui:type-check
